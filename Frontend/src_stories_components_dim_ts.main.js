"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdim"] = self["webpackChunkdim"] || []).push([["src_stories_components_dim_ts"],{

/***/ "./src/stories/components/dim.ts":
/*!***************************************!*\
  !*** ./src/stories/components/dim.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   define: () => (/* binding */ define),\n/* harmony export */   useEffect: () => (/* binding */ useEffect),\n/* harmony export */   useLazyScope: () => (/* binding */ useLazyScope),\n/* harmony export */   useMemo: () => (/* binding */ useMemo),\n/* harmony export */   useScope: () => (/* binding */ useScope),\n/* harmony export */   useState: () => (/* binding */ useState),\n/* harmony export */   useStyle: () => (/* binding */ useStyle)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar currentInstance = null;\nfunction setCurrentInstance(instance) {\n  currentInstance = instance;\n}\nfunction getCurrentInstance() {\n  if (!currentInstance) {\n    throw new Error(\"Hooks can only be called inside a component.\");\n  }\n  return currentInstance;\n}\nfunction define(_ref) {\n  var tag = _ref.tag,\n    CustomFunctionalComponent = _ref.component;\n  var CustomComponent = /*#__PURE__*/function (_LitElement) {\n    _inherits(CustomComponent, _LitElement);\n    function CustomComponent() {\n      var _this;\n      _classCallCheck(this, CustomComponent);\n      _this = _callSuper(this, CustomComponent);\n      _this.hookIndex = 0;\n      _this.hooks = {};\n      return _this;\n    }\n    _createClass(CustomComponent, [{\n      key: \"render\",\n      value: function render() {\n        // Reset hook index on every render\n        this.hookIndex = 0;\n\n        // Set the current instance context\n        setCurrentInstance(this);\n\n        // Get all attributes as props\n        var attributes = Array.from(this.attributes).reduce(function (acc, attr) {\n          acc[attr.name] = attr.value;\n          return acc;\n        }, {});\n        var sharedDependencies = {\n          useState: useState,\n          useEffect: useEffect,\n          useMemo: useMemo,\n          useScope: useScope,\n          useStyle: useStyle,\n          html: lit__WEBPACK_IMPORTED_MODULE_0__.html,\n          css: lit__WEBPACK_IMPORTED_MODULE_0__.css\n        };\n\n        // Call the functional component\n        var result = CustomFunctionalComponent(_objectSpread(_objectSpread({}, attributes), {}, {\n          children: this.innerHTML\n        }), sharedDependencies);\n\n        // Clear the current instance context\n        setCurrentInstance(null);\n        return result;\n      }\n    }]);\n    return CustomComponent;\n  }(lit__WEBPACK_IMPORTED_MODULE_0__.LitElement);\n  window.customElements.define(tag, CustomComponent);\n}\nfunction useState(initialState) {\n  var component = getCurrentInstance();\n  var hookIndex = component.hookIndex++;\n  var hookName = \"hook-\".concat(hookIndex);\n  if (!component.hooks[hookName]) {\n    component.hooks[hookName] = initialState;\n  }\n  var setState = function setState(newState) {\n    var value = typeof newState === 'function' ? newState(component.hooks[hookName]) : newState;\n    component.hooks[hookName] = value;\n    component.requestUpdate();\n  };\n  return [component.hooks[hookName], setState];\n}\nfunction useEffect(effect, dependencies) {\n  var _component$hooks$hook;\n  var component = getCurrentInstance();\n  var hookIndex = component.hookIndex++;\n  var hookName = \"hook-\".concat(hookIndex);\n  var prevDeps = (_component$hooks$hook = component.hooks[hookName]) === null || _component$hooks$hook === void 0 ? void 0 : _component$hooks$hook.dependencies;\n  var hasChanged = !prevDeps || dependencies.some(function (dep, i) {\n    return dep !== prevDeps[i];\n  });\n  if (hasChanged) {\n    var _component$hooks$hook2;\n    if ((_component$hooks$hook2 = component.hooks[hookName]) !== null && _component$hooks$hook2 !== void 0 && _component$hooks$hook2.cleanup) {\n      component.hooks[hookName].cleanup();\n    }\n    var cleanup = effect();\n    component.hooks[hookName] = {\n      dependencies: dependencies,\n      cleanup: cleanup\n    };\n  }\n  component.addController({\n    hostDisconnected: function hostDisconnected() {\n      var _component$hooks$hook3;\n      if ((_component$hooks$hook3 = component.hooks[hookName]) !== null && _component$hooks$hook3 !== void 0 && _component$hooks$hook3.cleanup) {\n        component.hooks[hookName].cleanup();\n      }\n    }\n  });\n}\nfunction useMemo(calculation, dependencies) {\n  var _component$hooks$hook4;\n  var component = getCurrentInstance();\n  var hookIndex = component.hookIndex++;\n  var hookName = \"hook-\".concat(hookIndex);\n  var prevDeps = (_component$hooks$hook4 = component.hooks[hookName]) === null || _component$hooks$hook4 === void 0 ? void 0 : _component$hooks$hook4.dependencies;\n  var hasChanged = !prevDeps || dependencies.some(function (dep, i) {\n    return dep !== prevDeps[i];\n  });\n  if (hasChanged) {\n    component.hooks[hookName] = {\n      value: calculation(),\n      dependencies: dependencies\n    };\n  }\n  return component.hooks[hookName].value;\n}\nfunction useScope(elements) {\n  Object.keys(elements).forEach(function (key) {\n    var elementClass = elements[key];\n\n    // Define the custom element with a unique tag per component instance\n    if (!customElements.get(key)) {\n      define({\n        tag: key,\n        component: elementClass\n      });\n    }\n  });\n}\nfunction useStyle(styles) {\n  var component = getCurrentInstance();\n  if (!component._stylesApplied) {\n    component._stylesApplied = true;\n\n    // Apply the styles to the component\n    var styleElement = document.createElement('style');\n    styleElement.textContent = (0,lit__WEBPACK_IMPORTED_MODULE_0__.unsafeCSS)(styles).cssText;\n    component.shadowRoot.appendChild(styleElement);\n  }\n}\nvar useLazyScope = function useLazyScope(tag, promise) {\n  promise.then(function (module) {\n    var elementClass = new Function(\"return \".concat(module))();\n    if (!customElements.get(tag)) {\n      define({\n        tag: tag,\n        component: elementClass\n      });\n    }\n  });\n};\n\n//# sourceURL=webpack://dim/./src/stories/components/dim.ts?");

/***/ })

}]);