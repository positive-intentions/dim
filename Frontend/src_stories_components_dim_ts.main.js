"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdim"] = self["webpackChunkdim"] || []).push([["src_stories_components_dim_ts"],{

/***/ "./src/stories/components/dim.ts":
/*!***************************************!*\
  !*** ./src/stories/components/dim.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   define: () => (/* binding */ define),\n/* harmony export */   useEffect: () => (/* binding */ useEffect),\n/* harmony export */   useLazyScope: () => (/* binding */ useLazyScope),\n/* harmony export */   useMemo: () => (/* binding */ useMemo),\n/* harmony export */   useScope: () => (/* binding */ useScope),\n/* harmony export */   useState: () => (/* binding */ useState),\n/* harmony export */   useStyle: () => (/* binding */ useStyle)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _mini_lit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mini-lit */ \"./src/stories/components/mini-lit.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\nvar currentInstance = null;\nfunction setCurrentInstance(instance) {\n  currentInstance = instance;\n}\nfunction getCurrentInstance() {\n  if (!currentInstance) {\n    throw new Error(\"Hooks can only be called inside a component.\");\n  }\n  return currentInstance;\n}\nfunction define(_ref) {\n  var tag = _ref.tag,\n    CustomFunctionalComponent = _ref.component;\n  var DimComponent = /*#__PURE__*/function (_LitElement) {\n    _inherits(DimComponent, _LitElement);\n    function DimComponent() {\n      var _this;\n      _classCallCheck(this, DimComponent);\n      _this = _callSuper(this, DimComponent);\n      _this.hookIndex = 0;\n      _this.hooks = {};\n      return _this;\n    }\n    _createClass(DimComponent, [{\n      key: \"render\",\n      value: function render() {\n        // Reset hook index on every render\n        this.hookIndex = 0;\n\n        // Set the current instance context\n        setCurrentInstance(this);\n\n        // Get all attributes as props\n        var attributes = Array.from(this.attributes).reduce(function (acc, attr) {\n          acc[attr.name] = attr.value;\n          return acc;\n        }, {});\n        console.log(\"attributes\", this.attributes, this.props);\n        this.props = this.props || {};\n        var sharedDependencies = {\n          useState: useState,\n          useEffect: useEffect,\n          useMemo: useMemo,\n          useScope: useScope,\n          useStyle: useStyle,\n          html: _mini_lit__WEBPACK_IMPORTED_MODULE_1__.html,\n          css: _mini_lit__WEBPACK_IMPORTED_MODULE_1__.css\n        };\n\n        // Call the functional component\n        var result = CustomFunctionalComponent(_objectSpread(_objectSpread(_objectSpread({}, attributes), this.props), {}, {\n          children: this.innerHTML\n        }), sharedDependencies);\n\n        // Clear the current instance context\n        setCurrentInstance(null);\n        return result;\n      }\n    }], [{\n      key: \"properties\",\n      get: function get() {\n        return {\n          props: {\n            type: Object\n          }\n        };\n      }\n    }]);\n    return DimComponent;\n  }(lit__WEBPACK_IMPORTED_MODULE_0__.LitElement);\n  window.customElements.define(tag, DimComponent);\n}\nfunction useState(initialState) {\n  var component = getCurrentInstance();\n  var hookIndex = component.hookIndex++;\n  var hookName = \"hook-\".concat(hookIndex);\n  if (!component.hooks[hookName]) {\n    component.hooks[hookName] = initialState;\n  }\n  var setState = function setState(newState) {\n    var value = typeof newState === \"function\" ? newState(component.hooks[hookName]) : newState;\n    component.hooks[hookName] = value;\n    component.requestUpdate();\n  };\n  return [component.hooks[hookName], setState];\n}\nfunction useEffect(effect, dependencies) {\n  var _component$hooks$hook;\n  var component = getCurrentInstance();\n  var hookIndex = component.hookIndex++;\n  var hookName = \"hook-\".concat(hookIndex);\n  var prevDeps = (_component$hooks$hook = component.hooks[hookName]) === null || _component$hooks$hook === void 0 ? void 0 : _component$hooks$hook.dependencies;\n  var hasChanged = !prevDeps || dependencies.some(function (dep, i) {\n    return dep !== prevDeps[i];\n  });\n  if (hasChanged) {\n    var _component$hooks$hook2;\n    if ((_component$hooks$hook2 = component.hooks[hookName]) !== null && _component$hooks$hook2 !== void 0 && _component$hooks$hook2.cleanup) {\n      component.hooks[hookName].cleanup();\n    }\n    var cleanup = effect();\n    component.hooks[hookName] = {\n      dependencies: dependencies,\n      cleanup: cleanup\n    };\n  }\n\n  // // Add event listener to handle unmount\n  // component.addEventListener(\"disconnectedCallback\", () => {\n  //   if (component.hooks[hookName]?.cleanup) {\n  //     component.hooks[hookName].cleanup();\n  //   }\n  // });\n\n  component.addController({\n    hostDisconnected: function hostDisconnected() {\n      var _component$hooks$hook3;\n      if ((_component$hooks$hook3 = component.hooks[hookName]) !== null && _component$hooks$hook3 !== void 0 && _component$hooks$hook3.cleanup) {\n        component.hooks[hookName].cleanup();\n      }\n    }\n  });\n}\nfunction useMemo(calculation, dependencies) {\n  var _component$hooks$hook4;\n  var component = getCurrentInstance();\n  var hookIndex = component.hookIndex++;\n  var hookName = \"hook-\".concat(hookIndex);\n  var prevDeps = (_component$hooks$hook4 = component.hooks[hookName]) === null || _component$hooks$hook4 === void 0 ? void 0 : _component$hooks$hook4.dependencies;\n  var hasChanged = !prevDeps || dependencies.some(function (dep, i) {\n    return dep !== prevDeps[i];\n  });\n  if (hasChanged) {\n    component.hooks[hookName] = {\n      value: calculation(),\n      dependencies: dependencies\n    };\n  }\n  return component.hooks[hookName].value;\n}\nfunction useScope(elements) {\n  Object.keys(elements).forEach(function (key) {\n    var elementClass = elements[key];\n\n    // Define the custom element with a unique tag per component instance\n    if (!customElements.get(key)) {\n      define({\n        tag: key,\n        component: elementClass\n      });\n    }\n  });\n}\nfunction useStyle(styles) {\n  var component = getCurrentInstance();\n  if (!component._stylesApplied) {\n    component._stylesApplied = true;\n\n    // Apply the styles to the component\n    var styleElement = document.createElement(\"style\");\n    styleElement.textContent = (0,_mini_lit__WEBPACK_IMPORTED_MODULE_1__.unsafeCSS)(styles).cssText;\n    component.shadowRoot.appendChild(styleElement);\n  }\n}\nvar useLazyScope = function useLazyScope(tag, promise) {\n  promise.then(function (module) {\n    var elementClass = new Function(\"return \".concat(module))();\n    if (!customElements.get(tag)) {\n      define({\n        tag: tag,\n        component: elementClass\n      });\n    }\n  });\n};\n\n//# sourceURL=webpack://dim/./src/stories/components/dim.ts?");

/***/ }),

/***/ "./src/stories/components/mini-lit.js":
/*!********************************************!*\
  !*** ./src/stories/components/mini-lit.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSSResult: () => (/* binding */ CSSResult),\n/* harmony export */   createHtmlElement: () => (/* binding */ createHtmlElement),\n/* harmony export */   css: () => (/* binding */ css),\n/* harmony export */   expandSelfClosingTags: () => (/* binding */ expandSelfClosingTags),\n/* harmony export */   html: () => (/* binding */ html),\n/* harmony export */   supportsAdoptingStyleSheets: () => (/* binding */ supportsAdoptingStyleSheets),\n/* harmony export */   unsafeCSS: () => (/* binding */ unsafeCSS)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar global = globalThis;\nvar supportsAdoptingStyleSheets = global.ShadowRoot && (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) && 'adoptedStyleSheets' in Document.prototype && 'replace' in CSSStyleSheet.prototype;\nvar constructionToken = Symbol();\nvar cssTagCache = new WeakMap();\nvar CSSResult = /*#__PURE__*/function () {\n  function CSSResult(cssText, strings, safeToken) {\n    _classCallCheck(this, CSSResult);\n    // This property needs to remain unminified.\n    this['_$cssResult$'] = true;\n    if (safeToken !== constructionToken) {\n      throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  _createClass(CSSResult, [{\n    key: \"styleSheet\",\n    get: function get() {\n      // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n      // constructable.\n      var styleSheet = this._styleSheet;\n      var strings = this._strings;\n      if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n        var cacheable = strings !== undefined && strings.length === 1;\n        if (cacheable) {\n          styleSheet = cssTagCache.get(strings);\n        }\n        if (styleSheet === undefined) {\n          (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(this.cssText);\n          if (cacheable) {\n            cssTagCache.set(strings, styleSheet);\n          }\n        }\n      }\n      return styleSheet;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.cssText;\n    }\n  }]);\n  return CSSResult;\n}();\nvar textFromCSSResult = function textFromCSSResult(value) {\n  // This property needs to remain unminified.\n  if (value['_$cssResult$'] === true) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\"Value passed to 'css' function must be a 'css' function result: \" + \"\".concat(value, \". Use 'unsafeCSS' to pass non-literal values, but take care \") + \"to ensure page security.\");\n  }\n};\nvar unsafeCSS = function unsafeCSS(value) {\n  return new CSSResult(typeof value === 'string' ? value : String(value), undefined, constructionToken);\n};\nvar css = function css(strings) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n  var cssText = strings.length === 1 ? strings[0] : values.reduce(function (acc, v, idx) {\n    return acc + textFromCSSResult(v) + strings[idx + 1];\n  }, strings[0]);\n  return new CSSResult(cssText, strings, constructionToken);\n};\nvar createHtmlElement = function createHtmlElement(_ref) {\n  var strings = _ref.strings,\n    values = _ref.values;\n  // Create a template element for parsing and detaching later\n  var template = document.createElement(\"template\");\n  var rawHTML = strings.reduce(function (acc, string, index) {\n    // Check if the current value is an array\n\n    var value = Array.isArray(values[index]) ? values[index].map(function (v) {\n      var div = document.createElement(\"div\");\n      div.appendChild(v);\n      return div.innerHTML;\n    }).join(\"\") : values[index];\n    return acc + string + (values[index] !== undefined ? value : \"\");\n  }, \"\");\n  template.innerHTML = rawHTML.trim();\n\n  // Extract the content fragment from the template\n  var fragment = template.content.cloneNode(true); // Clone to avoid affecting the original template\n\n  // Keep track of the current value index\n  var valueIndex = 0;\n  fragment.querySelectorAll(\"*\").forEach(function (element) {\n    // Process element attributes\n    var attributes = Array.from(element.attributes);\n    attributes.forEach(function (attr) {\n      if (attr.name.startsWith(\"@\")) {\n        // Handle event listeners (e.g., @click)\n        var eventPropName = attr.name.slice(1); // Remove '@' prefix\n        var boundValue = values[valueIndex]; // Get the corresponding value\n\n        if (typeof boundValue === \"function\") {\n          element.addEventListener(eventPropName, boundValue);\n        } else {\n          console.warn(\"Expected a function for \".concat(eventPropName, \", but got:\"), boundValue);\n        }\n        element.removeAttribute(attr.name); // Prevent attribute rendering\n        //set focus on the element\n        element.focus();\n        valueIndex++;\n      } else if (attr.name.startsWith(\".\")) {\n        // Handle property bindings (e.g., .value)\n        var propName = attr.name.slice(1); // Remove '.' prefix\n        var _boundValue = values[valueIndex]; // Get the corresponding value\n\n        if (_boundValue !== undefined && _boundValue !== null) {\n          element[propName] = _boundValue;\n        } else {\n          console.warn(\"Expected a value for \".concat(propName, \", but got:\"), _boundValue);\n        }\n        element.removeAttribute(attr.name); // Prevent attribute rendering\n        valueIndex++;\n      }\n    });\n  });\n\n  // Detach the template to avoid unnecessary DOM manipulation\n  template.remove();\n  return fragment;\n};\nfunction expandSelfClosingTags(inputStrings) {\n  var strings = inputStrings.map(function (str) {\n    return \"\".concat(str);\n  });\n  for (var i = 0; i < strings.length; i++) {\n    var selfClosingTagPosition = strings[i].indexOf('/>');\n    if (selfClosingTagPosition == -1) {\n      continue;\n    }\n\n    // you needs to scan in reverse the strings array from the self closing tag to determine the nearest opening tag name\n    var openingTagName = '';\n    for (var j = i; j >= 0; j--) {\n      if (strings[j].includes('<') && strings[j].includes('>')) {\n        // scan in reverse order for the opening tag from the closing tag position\n        var seekingposition = {\n          stringIndex: j,\n          charIndex: selfClosingTagPosition\n        };\n        while (seekingposition.charIndex >= 0 && seekingposition.stringIndex >= 0) {\n          if (strings[seekingposition.stringIndex][seekingposition.charIndex] === '<') {\n            break;\n          }\n          seekingposition.charIndex--;\n          if (seekingposition.charIndex < 0) {\n            if (seekingposition.stringIndex > 0) seekingposition.stringIndex--;\n            seekingposition.charIndex = strings[seekingposition.stringIndex].length - 1;\n          }\n        }\n        var openingTagString = strings[seekingposition.stringIndex].substring(seekingposition.charIndex + 1);\n        var tagnameEndPosition = openingTagString.indexOf(' ');\n        if (tagnameEndPosition >= 0) {\n          openingTagName = openingTagString.substring(0, tagnameEndPosition);\n        } else {\n          openingTagName = openingTagString.substring(0, openingTagString.indexOf('>'));\n        }\n        console.log({\n          openingTagName: openingTagName\n        });\n        if (selfClosingTagPosition >= 0) {\n          strings[i] = strings[i].replace('/>', \"></\".concat(openingTagName, \">\"));\n          console.log('string updated:', strings[i]);\n        }\n      }\n    }\n  }\n  for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    values[_key2 - 1] = arguments[_key2];\n  }\n  console.log({\n    inputStrings: inputStrings,\n    strings: strings,\n    values: values\n  });\n  return html.apply(void 0, [inputStrings].concat(values)); // Return the modified strings and values\n}\nvar html = function html(strings) {\n  for (var _len3 = arguments.length, values = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    values[_key3 - 1] = arguments[_key3];\n  }\n  return _defineProperty(_defineProperty(_defineProperty({}, \"_$litType$\", 1), \"strings\", strings), \"values\", values);\n};\n\n//# sourceURL=webpack://dim/./src/stories/components/mini-lit.js?");

/***/ })

}]);